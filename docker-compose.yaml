version: '3.3'

services:
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'scrape'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'user_pass'
      MYSQL_ROOT_PASSWORD: 'root_pass'
      MYSQL_ROOT_HOST: '%'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - $PWD/database:/var/lib/mysql
      # - my-db:/var/lib/mysql
    networks:
      - backend_network

  backend:
    depends_on:
      - db
    build: ./BACK
    ports:
      - "5000:5000"
    volumes:
      - $PWD/BACK/app:/usr/src/server/app
    networks:
      - backend_network
      # - frontend_network
    environment:
      - DOMAIN=http://localhost:3000

  # backend_test:
  #   depends_on:
  #     - backend
  #   build: ./BACK
  #   volumes:
  #     - $PWD/BACK/app:/usr/src/server/app
  #   command: npm run test
  #   networks:
  #     - backend_network
  #   logging:
  #     driver: journald
  #     options:
  #       tag: tests

  # scraper:
  #   depends_on:
  #     - backend
  #   networks:
  #     - backend_network
  #   build: ./MAIN_SCRAPER
  #   volumes:
  #     - $PWD/MAIN_SCRAPER/app:/usr/src/scraper/app

  # worker:
  #   depends_on:
  #     - backend
  #   networks:
  #     - backend_network
  #   build: ./WORKER
  #   volumes:
  #     - $PWD/WORKER/app:/usr/src/scraper/app
  #   deploy:
  #     mode: replicated
  #     replicas: 3
  #     resources:
  #       limits:
  #         cpus: '1'
  #         memory: 512M
  #       reservations:
  #         cpus: '0.5'
  #         memory: 256M

  frontend:
    depends_on:
      - backend
    networks:
      # - frontend_network
      - backend_network
    build: ./front
    volumes:
      - $PWD/front/src:/app/src
    ports:
      - "3000:3000"
    environment:
      # - REACT_APP_SOCKET=http://backend:5000
      - REACT_APP_SOCKET=http://localhost:5000
    
networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge


# Names our volume
# volumes:
#   my-db:
